{"version":3,"sources":["block-product-category.js","custom.js","main.js","const/header.js"],"names":["document","addEventListener","querySelectorAll","forEach","searchSection","swiperElement","querySelector","swiperID","getAttribute","Swiper","direction","loop","slidesPerView","slidesPerGroup","autoHeight","spaceBetween","navigation","nextEl","breakpoints","quantityArrowMinus","quantityArrowPlus","quantityNum","event","preventDefault","parseInt","value","jQuery","ready","$","on","e","$thisButton","this","data","action","product_id","closest","quantity","siblings","find","val","ajax","type","url","custom_ajax_obj","ajax_url","beforeSend","addClass","complete","removeClass","success","response","error","product_url","window","location","text","cart_count","jqXHR","textStatus","errorThrown","console","click","$qty","currentVal","isNaN","ajaxStop","each","contents","filter","nodeType","remove","currentCount","closestLi","hasClass","updateCurrencySymbol"],"mappings":"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","file":"../components/main.min.js","sourcesContent":["document.addEventListener(\"DOMContentLoaded\", function () {\n    const searchSections = document.querySelectorAll('.product-category');\n\n    searchSections.forEach(searchSection => {\n        const swiperElement = searchSection.querySelector('.swiper');\n        \n        if (swiperElement) {\n            const swiperID = swiperElement.getAttribute('id');\n            if (swiperID) {\n                const swiper_certificates = new Swiper(\"#\" + swiperID, {\n                    direction: \"horizontal\",\n                    loop: true,\n                    slidesPerView: 2,\n                    slidesPerGroup: 2,\n                    autoHeight: true,\n                    spaceBetween: 15,\n                    navigation: {\n                        nextEl: \".product-category__next\",\n                    },\n                    breakpoints: {\n                        660: {\n                            slidesPerView: 3,\n                            slidesPerGroup: 3,\n                            spaceBetween: 30\n                        },\n                        961: {\n                            slidesPerView: 4,\n                            slidesPerGroup: 4,\n                            spaceBetween: 40\n                        },\n                    },\n                });\n            }\n        }\n    });\n});","document.addEventListener(\"DOMContentLoaded\", function () {\n    function quantityProducts() {\n        var quantityArrowMinus = document.querySelector(\".quantity-arrow-minus\");\n        var quantityArrowPlus = document.querySelector(\".quantity-arrow-plus\");\n        var quantityNum = document.querySelector(\".input-text.qty.text\");\n\n        if (quantityArrowMinus && quantityArrowPlus && quantityNum) {\n            quantityArrowMinus.addEventListener(\"click\", function (event) {\n                event.preventDefault();\n                quantityMinus();\n            });\n\n            quantityArrowPlus.addEventListener(\"click\", function (event) {\n                event.preventDefault();\n                quantityPlus();\n            });\n        }\n\n        function quantityMinus() {\n            if (parseInt(quantityNum.value) > 1) {\n                quantityNum.value = parseInt(quantityNum.value) - 1;\n            }\n        }\n\n        function quantityPlus() {\n            quantityNum.value = parseInt(quantityNum.value) + 1;\n        }\n    }\n\n    quantityProducts();\n});\n\njQuery(document).ready(function ($) {\n    // Обработчик для кнопки \"Купить\"\n    $('.ajax_add_to_cart').on('click', function (e) {\n        e.preventDefault();\n\n        var $thisButton = $(this);\n        var product_id = $thisButton.data('product-id') || $thisButton.closest('form').data('product_id');\n        var quantity = $thisButton.siblings('.quantity').find('.qty').val() || 1;\n\n        var data = {\n            action: 'woocommerce_ajax_add_to_cart',\n            product_id: product_id,\n            quantity: quantity,\n        };\n\n        $.ajax({\n            type: 'POST',\n            url: custom_ajax_obj.ajax_url,\n            data: data,\n            beforeSend: function () {\n                $thisButton.addClass('loading');\n            },\n            complete: function () {\n                $thisButton.removeClass('loading');\n            },\n            success: function (response) {\n                if (response.error && response.product_url) {\n                    window.location = response.product_url;\n                    return;\n                } else {\n                    // Изменяем текст кнопки на \"В корзине\"\n                    $thisButton.text('В корзине').addClass('in-basket');\n\n                    // Обновление количества товаров в корзине\n                    $.ajax({\n                        url: custom_ajax_obj.ajax_url,\n                        type: 'post',\n                        data: {\n                            action: 'update_cart_count'\n                        },\n                        success: function (response) {\n                            $('.cart-count').text(response.data.cart_count);\n                        },\n                        error: function (jqXHR, textStatus, errorThrown) {\n                            console.error('Update cart count error:', textStatus, errorThrown);\n                        }\n                    });\n                }\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                console.error('AJAX error:', textStatus, errorThrown);\n            }\n        });\n\n        return false;\n    });\n\n    // Обработчики для кнопок увеличения и уменьшения количества\n    $('.quantity-arrow-minus').click(function () {\n        var $qty = $(this).siblings('.quantity').find('.qty');\n        var currentVal = parseInt($qty.val());\n        if (!isNaN(currentVal) && currentVal > 1) {\n            $qty.val(currentVal - 1);\n        }\n    });\n\n    $('.quantity-arrow-plus').click(function () {\n        var $qty = $(this).siblings('.quantity').find('.qty');\n        var currentVal = parseInt($qty.val());\n        if (!isNaN(currentVal)) {\n            $qty.val(currentVal + 1);\n        }\n    });\n\n    // Обновление корзины при изменении количества\n    function updateCartCount() {\n        $.ajax({\n            url: custom_ajax_obj.ajax_url,\n            type: 'post',\n            data: {\n                action: 'update_cart_count'\n            },\n            success: function (response) {\n                $('.cart-count').text(response.data.cart_count);\n            },\n            error: function (jqXHR, textStatus, errorThrown) {\n                console.error('Update cart count error:', textStatus, errorThrown);\n            }\n        });\n    }\n\n    // Добавляем событие на обновление корзины после изменения количества товаров\n    $('body').on('added_to_cart', function () {\n        updateCartCount();\n    });\n});\n\n$(document).ready(function () {\n    $(document).ajaxStop(function () {\n        //добавляем стиль для всех лайкнутых элементов\n        $('.delete_item').each(function () {\n            var closestLi = $(this).closest('li');\n            closestLi.addClass('added_to_wishlist');\n            $('.delete_item').contents().filter(function () {\n                return this.nodeType === 3; // Удаляем только текстовые узлы\n            }).remove();\n        });\n\n        //удаляем стиль для всех НЕ лайкнутых элементов - нужно для страницы карточки когда есть еще блоки просмотренные\n        $('.add_to_wishlist').each(function () {\n            var closestLi = $(this).closest('li');\n            closestLi.removeClass('added_to_wishlist');\n        });\n    });\n\n    // Отслеживаем клик на кнопке удаления из \"понравившихся\"\n    $('body').on('click', '.delete_item', function (e) {\n        var closestLi = $(this).closest('li');\n        closestLi.removeClass('added_to_wishlist');\n\n        // Обновляем счетчик в шапке страницы\n        var currentCount = parseInt($('.header-wishlist .wishlist-count').text(), 10);\n        $('.header-wishlist .wishlist-count').text(currentCount - 1);\n    });\n\n    // Отслеживаем клик на кнопке добавления в \"понравившиеся\"\n    $('body').on('click', '.add_to_wishlist', function (e) {\n        var closestLi = $(this).closest('li');\n        $('.delete_item').contents().filter(function () {\n            return this.nodeType === 3; // Удаляем только текстовые узлы\n        }).remove();\n\n        // Проверяем, есть ли уже класс added_to_wishlist\n        if (!closestLi.hasClass('added_to_wishlist')) {\n            closestLi.addClass('added_to_wishlist');\n\n            // Обновляем счетчик в шапке страницы\n            var currentCount = parseInt($('.header-wishlist .wishlist-count').text(), 10);\n            $('.header-wishlist .wishlist-count').text(currentCount + 1);\n        }\n    });\n});\n\njQuery(document).ready(function ($) {\n    function updateCurrencySymbol() {\n        $('.summary.entry-summary .woocommerce-Price-currencySymbol').text('р. (шт)');\n    }\n\n    updateCurrencySymbol();\n\n    $(document).ajaxStop(function () {\n        updateCurrencySymbol();\n    });\n\n    $(document).on('contentUpdated', function() {\n        updateCurrencySymbol();\n    });\n});\n","","// const burger = document.getElementById(\"burger\"),\r\n//   parent_burger = burger.parentNode,\r\n//   back_layel_menu = document.getElementById(\"back_layel_menu\"),\r\n//   btn_ = document.getElementsByClassName(\"btn\");\r\n// burger.addEventListener(\"click\", function () {\r\n//   back_layel_menu.classList.toggle(\"open\");\r\n//   parent_burger.classList.toggle(\"open\");\r\n//   for (let item of btn_) {\r\n//     item.classList.toggle(\"open\");\r\n//   }\r\n// });\r\n"]}